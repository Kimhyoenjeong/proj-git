/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.13
 * Generated at: 2022-07-04 10:32:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.io.InputStream;
import java.net.URLEncoder;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import java.net.URL;

public final class monthFd_005fD1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("org.w3c.dom.NodeList");
    _jspx_imports_classes.add("org.w3c.dom.Element");
    _jspx_imports_classes.add("org.w3c.dom.Document");
    _jspx_imports_classes.add("java.net.URL");
    _jspx_imports_classes.add("org.w3c.dom.Node");
    _jspx_imports_classes.add("javax.xml.parsers.DocumentBuilderFactory");
    _jspx_imports_classes.add("java.io.InputStream");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>이달의음식</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h4><strong> * 샘플화면은 디자인을 적용하지 않았으니, 개별 사이트의 스타일에 맞게 코딩하시기 바랍니다.</strong></h4>\r\n");

//이달의음식 상세조회
if(request.getParameter("cntntsNo")!=null && !request.getParameter("cntntsNo").equals("")){
	//apiKey - 농사로 Open API에서 신청 후 승인되면 확인 가능
	String apiKey="20220701DXKFWCSZ3NCD56IZPICHPA";
	//서비스 명
	String serviceName="monthFd";
	//오퍼레이션 명
	String operationName="monthFdmtDtl";

	//XML 받을 URL 생성
	String parameter = "/"+serviceName+"/"+operationName;
	parameter += "?apiKey="+ apiKey;
	parameter += "&cntntsNo="+ request.getParameter("cntntsNo");

	//서버와 통신
	URL apiUrl = new URL("http://api.nongsaro.go.kr/service"+parameter);
	InputStream apiStream = apiUrl.openStream();

	Document doc = null;
	try{
		//xml document
		doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(apiStream);
	}catch(Exception e){
		e.printStackTrace();
	}finally{
		apiStream.close();
	}

	//키값
	String cntntsNo = null;
	//식재료명
	String fdmtNm = null;
	//식재료유래
	String ctvtIndcDtl = null;
	//품종특성 구입요령
	String prchCheatDtl = null;
	//보관방법 손질법
	String cstdyMthDtl = null;
	//기타정보
	String etcInfoDtl = null;
	//섭취방법
	String ntkMthDtl = null;
	//영양성분효능
	String ntrIrdntEfcyDtl = null;
	//관련연구정보
	String rltRsrchInfoDtl = null;
	//소비량
	String cnsmpqyDtl = null;
	//이미지구분코드
	String rtnImgSeCode = null;
	//이미지 경로
	String rtnFileCours = null;
	//이미지 물리명
	String rtnStreFileNm = null;
	//이미지 설명
	String rtnImageDc = null;

	try{cntntsNo = doc.getElementsByTagName("cntntsNo").item(0).getFirstChild().getNodeValue();}catch(Exception e){cntntsNo = "";}
	try{fdmtNm = doc.getElementsByTagName("fdmtNm").item(0).getFirstChild().getNodeValue();}catch(Exception e){fdmtNm = "";}
	try{ctvtIndcDtl = doc.getElementsByTagName("ctvtIndcDtl").item(0).getFirstChild().getNodeValue();}catch(Exception e){ctvtIndcDtl = "";}
	try{prchCheatDtl = doc.getElementsByTagName("prchCheatDtl").item(0).getFirstChild().getNodeValue();}catch(Exception e){prchCheatDtl = "";}
	try{cstdyMthDtl = doc.getElementsByTagName("cstdyMthDtl").item(0).getFirstChild().getNodeValue();}catch(Exception e){cstdyMthDtl = "";}
	try{etcInfoDtl = doc.getElementsByTagName("etcInfoDtl").item(0).getFirstChild().getNodeValue();}catch(Exception e){etcInfoDtl = "";}
	try{ntkMthDtl = doc.getElementsByTagName("ntkMthDtl").item(0).getFirstChild().getNodeValue();}catch(Exception e){ntkMthDtl = "";}
	try{ntrIrdntEfcyDtl = doc.getElementsByTagName("ntrIrdntEfcyDtl").item(0).getFirstChild().getNodeValue();}catch(Exception e){ntrIrdntEfcyDtl = "";}
	try{rltRsrchInfoDtl = doc.getElementsByTagName("rltRsrchInfoDtl").item(0).getFirstChild().getNodeValue();}catch(Exception e){rltRsrchInfoDtl = "";}
	try{cnsmpqyDtl = doc.getElementsByTagName("cnsmpqyDtl").item(0).getFirstChild().getNodeValue();}catch(Exception e){cnsmpqyDtl = "";}
	try{rtnImgSeCode = doc.getElementsByTagName("rtnImgSeCode").item(0).getFirstChild().getNodeValue();}catch(Exception e){rtnImgSeCode = "";}
	try{rtnFileCours = doc.getElementsByTagName("rtnFileCours").item(0).getFirstChild().getNodeValue();}catch(Exception e){rtnFileCours = "";}
	try{rtnStreFileNm = doc.getElementsByTagName("rtnStreFileNm").item(0).getFirstChild().getNodeValue();}catch(Exception e){rtnStreFileNm = "";}
	try{rtnImageDc = doc.getElementsByTagName("rtnImageDc").item(0).getFirstChild().getNodeValue();}catch(Exception e){rtnImageDc = "";}

      out.write("\r\n");
      out.write("	<h3><strong>이달의음식 (");
      out.print(fdmtNm);
      out.write(")</strong></h3>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h2> 기본정보</h2>\r\n");
      out.write("	<table  border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("		<colgroup>\r\n");
      out.write("			<col style=\"width:10%;\">\r\n");
      out.write("			<col>\r\n");
      out.write("		</colgroup>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>식재료유래</td>\r\n");
      out.write("			<td>");
      out.print(ctvtIndcDtl.replaceAll("\n", "<br/>"));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>품종특성구입요령</td>\r\n");
      out.write("			<td>");
      out.print(prchCheatDtl.replaceAll("\n", "<br/>"));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>보관법손질법</td>\r\n");
      out.write("			<td>");
      out.print(cstdyMthDtl.replaceAll("\n", "<br/>"));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>기타정보</td>\r\n");
      out.write("			<td>");
      out.print(etcInfoDtl.replaceAll("\n", "<br/>"));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("\r\n");
      out.write("	<h2>섭취정보</h2>\r\n");
      out.write("	<table  border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("		<colgroup>\r\n");
      out.write("			<col width=\"10%\">\r\n");
      out.write("			<col width=\"*\">\r\n");
      out.write("		</colgroup>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>섭취방법</td>\r\n");
      out.write("			<td>");
      out.print(ntkMthDtl.replaceAll("\n", "<br/>"));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>영양성분효능</td>\r\n");
      out.write("			<td>");
      out.print(ntrIrdntEfcyDtl.replaceAll("\n", "<br/>"));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>관련연구정보</td>\r\n");
      out.write("			<td>");
      out.print(rltRsrchInfoDtl.replaceAll("\n", "<br/>"));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>소비량</td>\r\n");
      out.write("			<td>");
      out.print(cnsmpqyDtl.replaceAll("\n", "<br/>"));
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	<div>\r\n");
      out.write("	<ul>\r\n");

	String[] rtnStreFileNmArr = rtnStreFileNm.split("\\|");
	String[] rtnFileCoursArr = rtnFileCours.split("\\|");
	String[] rtnImageDcArr = rtnImageDc.split("\\|");
	for(int i=0; i<rtnStreFileNmArr.length; i++){

		int imgCnt =-1;
		String[] rtnImgSeCodeArr= rtnImgSeCode.split("\\|");
		for(int k=0; k < rtnImgSeCodeArr.length; k++){
			if("209002".equals(rtnImgSeCodeArr[k]) || "209006".equals(rtnImgSeCodeArr[k])){
				imgCnt = k;
			}
		}
		if(imgCnt > -1){
			String imgUrl = "http://www.nongsaro.go.kr/"+ rtnFileCoursArr[imgCnt] +"/"+ rtnStreFileNmArr[imgCnt];
			
      out.write("\r\n");
      out.write("			<li style=\"width: 33%;display: inline-block;\"><a href=\"#\">\r\n");
      out.write("			<img src=\"");
      out.print(imgUrl);
      out.write("\" alt=\"\"  title=\"\" style=\"width: 249px;height: 198px;\"/>\r\n");
      out.write("			</a></li>\r\n");
      out.write("			");

		}
	}
}

      out.write("\r\n");
      out.write("	</ul>\r\n");
      out.write("	</div>\r\n");
      out.write("<br>\r\n");
      out.write("<input type=\"button\" onclick=\"javascript:location.href='monthFd.jsp'\" value=\"처음화면으로\"/>&nbsp;\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
