/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.13
 * Generated at: 2022-07-11 08:50:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.ArrayList;
import java.util.Map.Entry;
import java.util.Map.Entry;
import java.util.Iterator;
import java.util.HashMap;
import java.util.Map;
import java.io.InputStream;
import java.net.URLEncoder;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import java.net.URL;
import java.util.Calendar;

public final class monthFd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.w3c.dom.NodeList");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("java.net.URL");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("org.w3c.dom.Element");
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("org.w3c.dom.Document");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("org.w3c.dom.Node");
    _jspx_imports_classes.add("java.util.Map.Entry");
    _jspx_imports_classes.add("javax.xml.parsers.DocumentBuilderFactory");
    _jspx_imports_classes.add("java.io.InputStream");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<!-- CSS STYLE-->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/month.css\">\r\n");
      out.write("<!-- FONT -->\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<!--font-family:  'Gothic A1', sans-serif;-->\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Gothic+A1:wght@500&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Abril+Fatface&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<!-- font-family: 'Abril Fatface', cursive; -->\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Song+Myung&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<!-- font-family: 'Song Myung', serif; -->\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("<title>이달의 음식</title>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//조회\r\n");
      out.write("function mainMove(){\r\n");
      out.write("	with(document.searchYearForm){\r\n");
      out.write("		method=\"post\";\r\n");
      out.write("		action = \"monthFd.jsp\";\r\n");
      out.write("		target = \"_self\";\r\n");
      out.write("		submit();\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("//식재료 상세보기\r\n");
      out.write("function move1(dNo){\r\n");
      out.write("	with(document.searchYearForm){\r\n");
      out.write("		cntntsNo.value = dNo;\r\n");
      out.write("		method=\"get\";\r\n");
      out.write("		action = \"monthFd_D1.jsp\";\r\n");
      out.write("		target = \"_self\";\r\n");
      out.write("		submit();\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("//레시피 상세보기\r\n");
      out.write("function move2(dNo){\r\n");
      out.write("	with(document.searchYearForm){\r\n");
      out.write("		cntntsNo.value = dNo;\r\n");
      out.write("		method=\"get\";\r\n");
      out.write("		action = \"monthFd_D2.jsp\";\r\n");
      out.write("		target = \"_self\";\r\n");
      out.write("		submit();\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("  <div id=\"wrap\">\r\n");
      out.write("    <div id=\"header\">\r\n");
      out.write("      <div class=\"container\">\r\n");
      out.write("	      <div class=\"header\">\r\n");
      out.write("	        <div class=\"header-title\">\r\n");
      out.write("	        	<img alt=\"html\" src=\"title.png\" href=\"#\">\r\n");
      out.write("	        </div>\r\n");
      out.write("	        <!-- header-title-->\r\n");
      out.write("	        <div class=\"header-menu\">\r\n");
      out.write("	        	<a href=\"#\" class=\"search\"><span class=\"ir_pm\">search</span></a>\r\n");
      out.write("	        	<a href=\"#\" class=\"login\">로그인</a>\r\n");
      out.write("	        	<a href=\"#\" class=\"join\">회원가입</span></a>\r\n");
      out.write("	        </div>\r\n");
      out.write("	       </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- //header -->\r\n");
      out.write("      <div id=\"nav\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"nav\">\r\n");
      out.write("				<div class=\"nav-menu\">\r\n");
      out.write("					<div class=\"popluar\">\r\n");
      out.write("						<a href=\"#\">인기</a>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"month\">\r\n");
      out.write("						<a href=\"#\">이달의 음식</a>\r\n");
      out.write("						<div class=\"nav-under\" style=\"	float: center; 	width:100px; height: 4px; margin-top: 6px;	display: inline-block;	background-color: #f1b877;\"></div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"tv\">\r\n");
      out.write("						<a href=\"#\">tv</a>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"safe\">\r\n");
      out.write("						<a href=\"#\">안심식당</a>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"sitemap\">\r\n");
      out.write("						<a href=\"#\">사이트맵</a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- //nav-menu -->\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("     </div>\r\n");
      out.write("     <!-- //nav -->\r\n");
      out.write("     \r\n");
      out.write("     \r\n");

//apiKey - 농사로 Open API에서 신청 후 승인되면 확인 가능
String apiKey="20220701DXKFWCSZ3NCD56IZPICHPA";

//서비스 명
String serviceName="monthFd";
Calendar aCalendar = Calendar.getInstance();

//선택년도
String thisYear = "";
if(request.getParameter("thisYear")!=null && !request.getParameter("thisYear").equals("")){
	thisYear = request.getParameter("thisYear");
}else{
	aCalendar = Calendar.getInstance();
	thisYear = String.valueOf(aCalendar.get(Calendar.YEAR));
}
//선택월
String thisMonth = "";
if(request.getParameter("thisMonth")!=null && !request.getParameter("thisMonth").equals("")){
	thisMonth = request.getParameter("thisMonth");
}else{
	aCalendar = Calendar.getInstance();
	int month = aCalendar.get(Calendar.MONTH) + 1;
	thisMonth = String.format("%02d", month);
}

//기관 코드
if(true){
	//오퍼레이션 명
	String operationName="monthFdYearLst";

	//XML 받을 URL 생성
	String parameter = "/"+serviceName+"/"+operationName;
	parameter += "?apiKey="+ apiKey;

	//서버와 통신
	URL apiUrl = new URL("http://api.nongsaro.go.kr/service"+parameter);
	InputStream apiStream = apiUrl.openStream();

	Document doc = null;
	try{
		//xml document
		doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(apiStream);
	}catch(Exception e){
		e.printStackTrace();
	}finally{
		apiStream.close();
	}

	int size = 0;

	NodeList items = null;
	NodeList codeNms = null;

	items = doc.getElementsByTagName("item");
	size = doc.getElementsByTagName("item").getLength();
	codeNms = doc.getElementsByTagName("year");

	if(size==0){

      out.write("\r\n");
      out.write("	<h3>조회한 정보가 없습니다.</h3>\r\n");

	}else{

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 연도와 월 조회 -->\r\n");
      out.write("	<div id=\"contents\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("            	<div class=\"content1\">\r\n");
      out.write("            		<div class=\"month-title\">\r\n");
      out.write("            			<a>| FOOD OF THE MONTH |</a>\r\n");
      out.write("            			<div class=\"month-title-info\">\r\n");
      out.write("            				<a> 달마다 다른 추천 메뉴를 둘러보세요.</a>\r\n");
      out.write("            			</div>\r\n");
      out.write("            		</div>\r\n");
      out.write("            		<div class=\"month-contents\">month-contents\r\n");
      out.write("            		<div class=\"search-frame-year\">\r\n");
      out.write("	            		<form name=\"searchYearForm\">\r\n");
      out.write("							<input type=\"hidden\" name=\"cntntsNo\"/>\r\n");
      out.write("								<div class=\"year\">\r\n");
      out.write("									<a>연도&nbsp;</a>	\r\n");
      out.write("										<select class=\"select\" name=\"thisYear\" onchange=\"mainMove();\">\r\n");
      out.write("			\r\n");
      out.write("								");

										for(int i=0; i<size; i++){
											//코드명
											String codeNm = codeNms.item(i).getFirstChild() == null ? "" : codeNms.item(i).getFirstChild().getNodeValue();
								
      out.write("\r\n");
      out.write("								\r\n");
      out.write("										<option value=\"");
      out.print(codeNm);
      out.write('"');
      out.write(' ');
 if(codeNm.equals(thisYear)){out.print("selected");}
      out.write(' ');
      out.write('>');
      out.print(codeNm);
      out.write("</option>\r\n");
      out.write("										\r\n");
      out.write("								");
 		} 
      out.write("\r\n");
      out.write("										</select>\r\n");
      out.write("								</div>\r\n");
      out.write("						</form>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- //year -->\r\n");
      out.write("					<div class=\"search-frame-month\">\r\n");
      out.write("							<div class=\"month\">\r\n");
      out.write("							<a><span class=\"ir_pm\">월&nbsp;</span></a>\r\n");
      out.write("							<div class=\"month-select\">\r\n");
      out.write("								<form name=\"thisMonth\" onchange=\"mainMove();\">\r\n");
      out.write("									<input type=\"radio\" value=\"01\" ");
      out.print(thisMonth.equals("01")?"selected":"");
      out.write(">1월\r\n");
      out.write("									<input type=\"radio\" value=\"02\" ");
      out.print(thisMonth.equals("02")?"selected":"");
      out.write(">2월\r\n");
      out.write("									<input type=\"radio\" value=\"03\" ");
      out.print(thisMonth.equals("03")?"selected":"");
      out.write(">3월\r\n");
      out.write("									<input type=\"radio\" value=\"04\" ");
      out.print(thisMonth.equals("04")?"selected":"");
      out.write(">4월\r\n");
      out.write("									<input type=\"radio\"option value=\"05\" ");
      out.print(thisMonth.equals("05")?"selected":"");
      out.write(">5월\r\n");
      out.write("									<input type=\"radio\" value=\"06\" ");
      out.print(thisMonth.equals("06")?"selected":"");
      out.write(">6월\r\n");
      out.write("									<input type=\"radio\" value=\"07\" ");
      out.print(thisMonth.equals("07")?"selected":"");
      out.write(">7월\r\n");
      out.write("									<input type=\"radio\" value=\"08\" ");
      out.print(thisMonth.equals("08")?"selected":"");
      out.write(">8월\r\n");
      out.write("									<input type=\"radio\" value=\"09\" ");
      out.print(thisMonth.equals("09")?"selected":"");
      out.write(">9월\r\n");
      out.write("									<input type=\"radio\"option value=\"10\" ");
      out.print(thisMonth.equals("10")?"selected":"");
      out.write(">10월\r\n");
      out.write("									<input type=\"radio\" value=\"11\" ");
      out.print(thisMonth.equals("11")?"selected":"");
      out.write(">11월\r\n");
      out.write("									<input type=\"radio\"option value=\"12\" ");
      out.print(thisMonth.equals("12")?"selected":"");
      out.write(">12월\r\n");
      out.write("								</form>\r\n");
      out.write("							</div>\r\n");
      out.write("							</div>\r\n");
      out.write("					</div>	\r\n");
      out.write("					");

						}
					}
					
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("            	</div>\r\n");
      out.write("            </div>\r\n");
      out.write("    </div>\r\n");
      out.write("	\r\n");
      out.write("\r\n");

	//apiKey - 농사로 Open API에서 신청 후 승인되면 확인 가능
	apiKey="20220701DXKFWCSZ3NCD56IZPICHPA"; //apiKey - 농사로 Open API에서 신청 후 승인되면 확인 가능
	//서비스 명
	//오퍼레이션 명
	String operationName="monthFdmtLst";

	//XML 받을 URL 생성
	String parameter = "/"+serviceName+"/"+operationName;
	parameter += "?apiKey="+ apiKey;
	parameter += "&thisYear="+thisYear;
	parameter += "&thisMonth="+thisMonth;


	//서버와 통신
	URL apiUrl = new URL("http://api.nongsaro.go.kr/service"+parameter);

	InputStream apiStream = apiUrl.openStream();

	Document doc = null;
	try{
		//xml document
		doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(apiStream);
	}catch(Exception e){
		e.printStackTrace();
	}finally{
		apiStream.close();
	}

	int size = 0;

	NodeList items = null;
	NodeList cntntsNos = null;
	NodeList rtnImgSeCodes = null;
	NodeList rtnFileCourss = null;
	NodeList rtnStreFileNms = null;
	NodeList fdmtNms = null;


	items = doc.getElementsByTagName("item");
	size = doc.getElementsByTagName("item").getLength();
	cntntsNos = doc.getElementsByTagName("cntntsNo");
	rtnImgSeCodes = doc.getElementsByTagName("rtnImgSeCode");
	rtnFileCourss = doc.getElementsByTagName("rtnFileCours");
	rtnStreFileNms = doc.getElementsByTagName("rtnStreFileNm");
	fdmtNms = doc.getElementsByTagName("fdmtNm");


	if(size==0){ 
      out.write("\r\n");
      out.write("	<h3>조회한 정보가 없습니다.</h3>\r\n");
	}else{ 
      out.write("\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h3>");
      out.print(thisMonth);
      out.write("월의 식재료</h3>\r\n");
      out.write("	<div>\r\n");
      out.write("	<ul>\r\n");
      out.write("\r\n");

		for(int i=0; i<size; i++){
			//키값
			String cntntsNo = cntntsNos.item(i).getFirstChild() == null ? "" : cntntsNos.item(i).getFirstChild().getNodeValue();
			//파일구분코드
			String rtnImgSeCode = rtnImgSeCodes.item(i).getFirstChild() == null ? "" : rtnImgSeCodes.item(i).getFirstChild().getNodeValue();
			//파일경로
			String rtnFileCours = rtnFileCourss.item(i).getFirstChild() == null ? "" : rtnFileCourss.item(i).getFirstChild().getNodeValue();
			//파일명
			String rtnStreFileNm = rtnStreFileNms.item(i).getFirstChild() == null ? "" : rtnStreFileNms.item(i).getFirstChild().getNodeValue();
			//파일제목
			String fdmtNm = fdmtNms.item(i).getFirstChild() == null ? "" : fdmtNms.item(i).getFirstChild().getNodeValue();

			int imgCnt =-1;
			String[] rtnImgSeCodeArr= rtnImgSeCode.split("\\|");
			for(int k=0; k < rtnImgSeCodeArr.length; k++){
				if("209006".equals(rtnImgSeCodeArr[k])){
					imgCnt = k;
				}
			}
			String imgUrl ="http://www.nongsaro.go.kr/ps/img/common/anvil_img.jpg";
			if(imgCnt > -1){
				String[] rtnFileCoursArr = rtnFileCours.split("\\|");
				String[] rtnStreFileNmArr = rtnStreFileNm.split("\\|");
				imgUrl = "http://www.nongsaro.go.kr/"+ rtnFileCoursArr[imgCnt] +"/"+ rtnStreFileNmArr[imgCnt];
			}
				
      out.write("\r\n");
      out.write("				<li style=\"width: 32%;display: inline-block;\"><a href=\"#\" onclick=\"javascript:move1('");
      out.print(cntntsNo);
      out.write("');\">\r\n");
      out.write("				<img src=\"");
      out.print(imgUrl);
      out.write("\" alt=\"");
      out.print(fdmtNm);
      out.write("\"  title=\"");
      out.print(fdmtNm);
      out.write("\" style=\"width: 249px;height: 198px;\"/>\r\n");
      out.write("				</a>\r\n");
      out.write("				<p class=\"con\" style=\"position: relative;text-align:center;line-height:18px;color:rgb(255,255,255); bottom:5px; width: 245px; top: auto; background:#333 !important;\">");
      out.print(fdmtNm);
      out.write("</p>\r\n");
      out.write("				</li>\r\n");
      out.write("				");

		}

      out.write("\r\n");
      out.write("	</ul>\r\n");
      out.write("	</div>\r\n");

	}

	//apiKey - 농사로 Open API에서 신청 후 승인되면 확인 가능
	apiKey="20220701DXKFWCSZ3NCD56IZPICHPA"; //apiKey - 농사로 Open API에서 신청 후 승인되면 확인 가능
	//서비스 명
	//오퍼레이션 명
	operationName="monthNewFdLst";

	//XML 받을 URL 생성
	parameter = "/"+serviceName+"/"+operationName;
	parameter += "?apiKey="+ apiKey;
	parameter += "&thisYear="+thisYear;
	parameter += "&thisMonth="+thisMonth;


	//서버와 통신
	apiUrl = new URL("http://api.nongsaro.go.kr/service"+parameter);

	apiStream = apiUrl.openStream();

	doc = null;
	try{
		//xml document
		doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(apiStream);
	}catch(Exception e){
		e.printStackTrace();
	}finally{
		apiStream.close();
	}

	size = 0;

	items = null;
	cntntsNos = null;
	rtnImgSeCodes = null;
	rtnFileCourss = null;
	rtnStreFileNms = null;
	NodeList fdNms = null;
	NodeList fdSeCodes = null;


	items = doc.getElementsByTagName("item");
	size = doc.getElementsByTagName("item").getLength();
	cntntsNos = doc.getElementsByTagName("cntntsNo");
	rtnImgSeCodes = doc.getElementsByTagName("rtnImgSeCode");
	rtnFileCourss = doc.getElementsByTagName("rtnFileCours");
	rtnStreFileNms = doc.getElementsByTagName("rtnStreFileNm");
	fdNms = doc.getElementsByTagName("fdNm");
	fdSeCodes = doc.getElementsByTagName("fdSeCode");


	if(size==0){ 
      out.write("\r\n");
      out.write("	<h3>조회한 정보가 없습니다.</h3>\r\n");
	}else{ 
      out.write("\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h3>");
      out.print(thisMonth);
      out.write("월의 레시피</h3>\r\n");
      out.write("	<div>\r\n");
      out.write("	<ul>\r\n");

		for(int i=0; i<size; i++){
			//키값
			String cntntsNo = cntntsNos.item(i).getFirstChild() == null ? "" : cntntsNos.item(i).getFirstChild().getNodeValue();
			//파일구분코드
			String rtnImgSeCode = rtnImgSeCodes.item(i).getFirstChild() == null ? "" : rtnImgSeCodes.item(i).getFirstChild().getNodeValue();
			//파일경로
			String rtnFileCours = rtnFileCourss.item(i).getFirstChild() == null ? "" : rtnFileCourss.item(i).getFirstChild().getNodeValue();
			//파일명
			String rtnStreFileNm = rtnStreFileNms.item(i).getFirstChild() == null ? "" : rtnStreFileNms.item(i).getFirstChild().getNodeValue();
			//파일제목
			String fdNm = fdNms.item(i).getFirstChild() == null ? "" : fdNms.item(i).getFirstChild().getNodeValue();
			//레시피구분
			String fdSeCode = fdSeCodes.item(i).getFirstChild() == null ? "" : fdSeCodes.item(i).getFirstChild().getNodeValue();

			if("290001".equals(fdSeCode)){
				int imgCnt =-1;
				String[] rtnImgSeCodeArr= rtnImgSeCode.split("\\|");
				for(int k=0; k < rtnImgSeCodeArr.length; k++){
					if("209006".equals(rtnImgSeCodeArr[k])){
						imgCnt = k;
					}
				}
				String imgUrl ="http://www.nongsaro.go.kr/ps/img/common/anvil_img.jpg";
				if(imgCnt > -1){
					String[] rtnFileCoursArr = rtnFileCours.split("\\|");
					String[] rtnStreFileNmArr = rtnStreFileNm.split("\\|");
					imgUrl = "http://www.nongsaro.go.kr/"+ rtnFileCoursArr[imgCnt] +"/"+ rtnStreFileNmArr[imgCnt];
				}
					
      out.write("\r\n");
      out.write("					<li style=\"width: 32%;display: inline-block;\"><a href=\"#\" onclick=\"javascript:move2('");
      out.print(cntntsNo);
      out.write("');\">\r\n");
      out.write("					<img src=\"");
      out.print(imgUrl);
      out.write("\" alt=\"");
      out.print(fdNm);
      out.write("\"  title=\"");
      out.print(fdNm);
      out.write("\" style=\"width: 249px;height: 198px;\"/>\r\n");
      out.write("					</a>\r\n");
      out.write("					<p class=\"con\" style=\"position: relative;text-align:center;line-height:18px;color:rgb(255,255,255); bottom:5px; width: 245px; top: auto; background:#333 !important;\">");
      out.print(fdNm);
      out.write("</p>\r\n");
      out.write("					</li>\r\n");
      out.write("					");

			}
		}

      out.write("\r\n");
      out.write("	</ul>\r\n");
      out.write("	</div>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h3>");
      out.print(thisMonth);
      out.write("월의 상차림</h3>\r\n");
      out.write("	<div>\r\n");
      out.write("	<ul>\r\n");


	for(int i=0; i<size; i++){
		//키값
		String cntntsNo = cntntsNos.item(i).getFirstChild() == null ? "" : cntntsNos.item(i).getFirstChild().getNodeValue();
		//파일구분코드
		String rtnImgSeCode = rtnImgSeCodes.item(i).getFirstChild() == null ? "" : rtnImgSeCodes.item(i).getFirstChild().getNodeValue();
		//파일경로
		String rtnFileCours = rtnFileCourss.item(i).getFirstChild() == null ? "" : rtnFileCourss.item(i).getFirstChild().getNodeValue();
		//파일명
		String rtnStreFileNm = rtnStreFileNms.item(i).getFirstChild() == null ? "" : rtnStreFileNms.item(i).getFirstChild().getNodeValue();
		//파일제목
		String fdNm = fdNms.item(i).getFirstChild() == null ? "" : fdNms.item(i).getFirstChild().getNodeValue();
		//레시피구분
		String fdSeCode = fdSeCodes.item(i).getFirstChild() == null ? "" : fdSeCodes.item(i).getFirstChild().getNodeValue();

		if("290002".equals(fdSeCode) || "290003".equals(fdSeCode)){
			int imgCnt =-1;
			String[] rtnImgSeCodeArr= rtnImgSeCode.split("\\|");
			for(int k=0; k < rtnImgSeCodeArr.length; k++){
				if("209006".equals(rtnImgSeCodeArr[k])){
					imgCnt = k;
				}
			}
			String imgUrl ="http://www.nongsaro.go.kr/ps/img/common/anvil_img.jpg";
			if(imgCnt > -1){
				String[] rtnFileCoursArr = rtnFileCours.split("\\|");
				String[] rtnStreFileNmArr = rtnStreFileNm.split("\\|");
				imgUrl = "http://www.nongsaro.go.kr/"+ rtnFileCoursArr[imgCnt] +"/"+ rtnStreFileNmArr[imgCnt];
			}
				
      out.write("\r\n");
      out.write("				<li style=\"width: 32%;display: inline-block;\">\r\n");
      out.write("				<img src=\"");
      out.print(imgUrl);
      out.write("\" alt=\"");
      out.print(fdNm);
      out.write("\"  title=\"");
      out.print(fdNm);
      out.write("\" style=\"width: 249px;height: 198px;\"/>\r\n");
      out.write("				<p class=\"con\" style=\"position: relative;text-align:center;line-height:18px;color:rgb(255,255,255); bottom:5px; width: 245px; top: auto; background:#333 !important;\">");
      out.print(fdNm);
      out.write("</p>\r\n");
      out.write("				</li>\r\n");
      out.write("				");

		}
	}
}

      out.write("\r\n");
      out.write("	</ul>\r\n");
      out.write("	</div>\r\n");
      out.write("<br>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
